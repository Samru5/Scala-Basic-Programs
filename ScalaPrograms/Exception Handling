import java.io.{FileNotFoundException, FileReader}
import scala.io.Source
import scala.util.{Failure, Success, Try}


object RDD_Operations extends App{
 def readTextFile(fileName:String):Try[List[String]] ={

    Try(Source.fromFile(fileName).getLines.toList)

  }

  val fileName="C:/Users/sashetye/demo/Colours.txt"
  readTextFile(fileName) match
    {
    case Success(msg) =>msg.foreach(println)

    case Failure(f) =>println(f)
  }
  }
  
  or
  
  try{
   val data = new FileReader("C:/Users/sashetye/demo/Colours4.txt")
  }


catch{
  case ex:FileNotFoundException =>println("File not found!!"+ex.getCause)
    println("File not found!!"+ex)
    println("File not found!!"+ex.getMessage)
}

or

try {
    val result = 12 / 0
  }
  catch {
    //case e: ArithmeticException => println("It is an arithmetic exception" + e)
    //case e: ArithmeticException => println("It is an arithmetic exception" + e.getCause)
    case e: ArithmeticException => println("It is an arithmetic exception" + e.getMessage)


    case ex: Exception => println(ex)
    case ex: ArithmeticException => println(ex.getCause)
    case ex: ArithmeticException => println(ex.getMessage)

  }
