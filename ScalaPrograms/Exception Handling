import java.io.{FileNotFoundException, FileReader}
import scala.io.Source
import scala.util.{Failure, Success, Try}


object RDD_Operations extends App{
 def readTextFile(fileName:String):Try[List[String]] ={

    Try(Source.fromFile(fileName).getLines.toList)

  }

  val fileName="C:/Users/sashetye/demo/Colours.txt"
  readTextFile(fileName) match
    {
    case Success(msg) =>msg.foreach(println)

    case Failure(f) =>println(f)
  }
  }
  
  or
  
  try{
   val data = new FileReader("C:/Users/sashetye/demo/Colours4.txt")
  }


catch{
  case ex:FileNotFoundException =>println("File not found!!"+ex.getCause)
    println("File not found!!"+ex)
    println("File not found!!"+ex.getMessage)
}

or

try {
    val result = 12 / 0
  }
  catch {
    //case e: ArithmeticException => println("It is an arithmetic exception" + e)
    //case e: ArithmeticException => println("It is an arithmetic exception" + e.getCause)
    case e: ArithmeticException => println("It is an arithmetic exception" + e.getMessage)


    case ex: Exception => println(ex)
    case ex: ArithmeticException => println(ex.getCause)
    case ex: ArithmeticException => println(ex.getMessage)

  }
  
  or
  
  import java.io.FileNotFoundException

import scala.io.Source
import scala.util.{Failure, Success, Try}

object Exception_Handling extends App{

  //Eg-1:-try,catch
  try{
    val result=53/0
  }
  catch{

    case e:ArithmeticException =>println("Exception Occured!"+e)
      println("Exception Occured!"+e.getMessage)
      println("Exception Occured!"+e.getCause)

    case ex:Exception =>println("Exception is-"+ex)
  }

//Eg-2:-try,catch,finally
  try{
    val myFile=Source.fromFile("C:/Users/sashetye/demo/Colours1.txt")

  }

  catch{
    case e:FileNotFoundException =>println("Exception-"+e)
    case ex:Exception =>println("Excption is-"+ex)
  }

  finally {
    println("Program is over")
  }

  //Eg-3:-Try,Success,Failure

  val data=4/2
  val ans=Try(data)

  ans match{
    case Success(s) =>println(s)
    case Failure(f) =>println(f)
  }

  //Eg-4:-Try,Success,Failure
  val input=Try(Source.fromFile("C:/Users/sashetye/demo/Colours2.txt"))

  input match{
    case Success(s) =>println(s)
    case Failure(f) =>println(f)
  }


}

